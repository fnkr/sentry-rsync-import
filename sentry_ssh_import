#!/usr/bin/env bash
set -e -u -o pipefail
shopt -s nullglob

script_name="$(basename -- "$0")"

config="$(dirname -- "${BASH_SOURCE[0]}")/sentry_ssh_import.config"

print_help() {
    echo "usage: $script_name [-c=CONFIG | --config=CONFIG]"
    echo "       $script_name [-h] [--help]"
}

for arg in "$@"; do
    if [[ "$arg" == "--config="* ]]; then
	config="${arg##--config=}"
    elif [[ "$arg" == "-c="* ]]; then
	config="${arg##-c=}"
    elif [ "$arg" = "--help" ] || [ "$arg" = "-h" ]; then
        print_help
        exit 0
    else
        print_help 1>&2
        exit 1
    fi
done

source -- "$config"

cache_dir="$cache_dir/$(basename -- "$config" .config)"
[ ! -d "$cache_dir" ] && mkdir -- "$cache_dir"

for report_location in "${report_locations[@]}"; do
    rsync \
        --compress \
        --recursive --exclude='*/' --include='*.sentry_report' \
        --remove-source-files "${report_location}/" "$cache_dir"
done

find "$cache_dir" -type f -name "*.sentry_report" -print0 | shuf --zero-terminated | while IFS= read -r -d $'\0' report; do
    [ ! -f "$report" ] && continue
    if curl --fail \
        --header "X-Sentry-Auth: Sentry sentry_version=6, sentry_key=${sentry_key}, sentry_secret=${sentry_secret}" \
        --data "@${report}" \
        "${sentry_host}/api/${sentry_project_id}/store/"
    then
        printf -- '\n'
        rm -- "$report"
    else
        printf -- "$script_name: error: failed to submit report: $report\n"
    fi
done
